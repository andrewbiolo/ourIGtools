/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package igtools.gui2.mults;

import igtools.common.charts.KHeatMap;
import igtools.common.kmer.b2.unit.B2UnitRLKmer;
import igtools.common.sequence.B3Sequence;
import igtools.common.util.Timer;
import igtools.gui2.WSSequence;

/**
 *
 * @author vbonnici
 */
public class K6HeatMapFrame extends javax.swing.JFrame {
    private WSSequence wsseq;
    private B3Sequence b3seq = null;
    private KHeatMap heatmap = new KHeatMap();
    private boolean getValues = true;
    /**
     * Creates new form KHeatMapFrame
     */
    public K6HeatMapFrame(WSSequence wsseq) {
        initComponents();
        
        this.wsseq = wsseq;
        this.b3seq = wsseq.getB3seq();
        this.setTitle("[1,6] Multiplicity HeatMap: "+wsseq.getName());
        
        
        /*class MyMouseListener implements MouseListener{
        @Override
        public void mouseReleased(MouseEvent arg0) {
            if(SwingUtilities.isRightMouseButton(arg0)){
                //my code
            }
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageJPanel1 = new igtools.gui2.ImageJPanel();
        kHeatMapConfPanel2 = new igtools.gui2.mults.KHeatMapConfPanel(heatmap);
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        javax.swing.GroupLayout imageJPanel1Layout = new javax.swing.GroupLayout(imageJPanel1);
        imageJPanel1.setLayout(imageJPanel1Layout);
        imageJPanel1Layout.setHorizontalGroup(
            imageJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 792, Short.MAX_VALUE)
        );
        imageJPanel1Layout.setVerticalGroup(
            imageJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
        );

        getContentPane().add(imageJPanel1);
        getContentPane().add(kHeatMapConfPanel2);

        jButton1.setText("Draw");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 744, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jButton1))
        );

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(getValues){
            
            int MAX_K = 6;
			
            double[][] values = new double[MAX_K][];
//			System.out.println("values.length: "+values.length);
            for(int i=0; i<MAX_K; i++){
                    values[i] = new double[(int)Math.pow(4, i+1)];
//				System.out.println("values["+i+"].length: "+values[i].length);
                    for(int j=0; j<values[i].length; j++)
                            values[i][j] = 0;
            }

            int omask = B2UnitRLKmer.MAX_CODE[1];
            int amask = B2UnitRLKmer.MAX_CODE[MAX_K];
            int code = 0 & amask;
            int nn = MAX_K+1;


            Timer timer = new Timer();


            int c;
            for(int i=0; i<b3seq.length(); i++){
                    c = b3seq.getB3(i);
                    if(c>3){//N or NULL
                            nn = 0;
                    }
                    else{
                            if(nn<MAX_K+1)
                                    nn++;
                            code = code << B2UnitRLKmer.BITS_PER_MER;
                            code |= (c & omask);
                            code &= amask;

                            for(int j=0; j<MAX_K; j++){
                                    if(i>=j && nn>j){
                                            values[j][code & B2UnitRLKmer.MAX_CODE[j+1]]++;
                                    }
                            }
                    }
            }

            for(int i=0; i<4; i++)
                    System.out.println(values[0][i]);

            String[] labels = new String[MAX_K];
            for(int i=0; i<labels.length; i++)
                    labels[i] = "k= "+(i+1);
            heatmap.values = values;
            heatmap.labels = labels;
            
            getValues = false;
            
            System.out.println(values.length);
        }
        else{
            this.kHeatMapConfPanel2.getValues();
        }
        
        heatmap.draw();
        this.imageJPanel1.setImage(heatmap.img);
        this.imageJPanel1.repaint();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private igtools.gui2.ImageJPanel imageJPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private igtools.gui2.mults.KHeatMapConfPanel kHeatMapConfPanel2;
    // End of variables declaration//GEN-END:variables
}
